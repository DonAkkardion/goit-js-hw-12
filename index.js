import{a as f,S as h,i as c}from"./assets/vendor-mdVVRe9K.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const l of e)if(l.type==="childList")for(const d of l.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&a(d)}).observe(document,{childList:!0,subtree:!0});function o(e){const l={};return e.integrity&&(l.integrity=e.integrity),e.referrerPolicy&&(l.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?l.credentials="include":e.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function a(e){if(e.ep)return;e.ep=!0;const l=o(e);fetch(e.href,l)}})();const F="46354087-8e1a6a8f4ead0e3d6b452e4d6",b="https://pixabay.com/api/";async function C(r,t=1,o=15){const a=`${b}?key=${F}&q=${encodeURIComponent(r)}&image_type=photo&orientation=horizontal&safesearch=true&page=${t}&per_page=${o}`;try{const e=await f.get(a);if(e.status!==200)throw new Error("Network response error");return e.data.hits}catch(e){throw console.error("Error fetching images:",e),e}}const y=document.querySelector(".gallery"),g=new h(".gallery a");function w(){y.innerHTML="",g.refresh()}function L(r){const t=r.map(o=>`
        <li class="gallery-item">
            <a class="gallery-link" href="${o.largeImageURL}">
                <div class="large-img">
                    <img class="gallery-image" src="${o.webformatURL}" alt="${o.tags}">
                    <ul class="img-details">
                        <li><p>Likes</p><p>${o.likes}</p></li>
                        <li><p>Views</p><p>${o.views}</p></li>
                        <li><p>Comments</p><p>${o.comments}</p></li>
                        <li><p>Downloads</p><p>${o.downloads}</p></li>
                    </ul>
                </div>
            </a>
        </li>
    `).join("");y.insertAdjacentHTML("beforeend",t),g.refresh()}const E=document.querySelector(".search-form"),u=document.querySelector(".search-form-input"),n=document.querySelector(".loader"),s=document.querySelector(".load-more"),p=document.querySelector(".loading-text"),S=document.querySelector(".gallery");let $="",i=1;E.addEventListener("submit",v);s.addEventListener("click",k);async function v(r){r.preventDefault();const t=u.value.trim();if(t===""){c.error({title:"Error",message:"Please enter a search term.",position:"topRight",backgroundColor:"#EF4040",messageColor:"#FFF",titleColor:"#FFF",iconColor:"#FFF",timeout:5e3});return}u.value="",i=1,n.style.display="block",w(),await m(t,i)}async function k(){i++,s.style.display="none",p.style.display="block",n.style.display="block",s.disabled=!0,await m($,i),s.textContent="Load more",s.disabled=!1,p.style.display="none",n.style.display="none"}async function m(r,t){n.style.display="block";try{const o=await C(r,t);n.style.display="none",o.length===0?c.info({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight",backgroundColor:"#EF4040",messageColor:"#FFF",titleColor:"#FFF",iconColor:"#FFF",timeout:5e3}):(L(o),i===1&&(s.style.display="inline-block"),P(),q(o.length))}catch(o){n.style.display="none",c.error({title:"Error",message:"Failed to fetch images. Please try again later.",position:"topRight",backgroundColor:"#EF4040",messageColor:"#FFF",titleColor:"#FFF",iconColor:"#FFF",timeout:5e3}),console.error("Error fetching images:",o)}}function P(){const r=S.getBoundingClientRect().height;window.scrollBy({top:r,behavior:"smooth"})}function q(r){r<15?(s.style.display="none",c.info({title:"Error",message:"We're sorry, but you've reached the end of search results.",position:"topRight",backgroundColor:"#EF4040",messageColor:"#FFF",titleColor:"#FFF",iconColor:"#FFF",timeout:5e3})):s.style.display="inline-block"}
//# sourceMappingURL=index.js.map
